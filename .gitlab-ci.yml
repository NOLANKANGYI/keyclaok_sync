stages:
  - test
  - build
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  app_name: "keycloak-synchronization-tool"
  app_label: "Keycloak Synchronization Tool"
  poetry_version: "1.1.4"
  project_id: pripolis-216913
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  image_name: eu.gcr.io/${project_id}/${app_name}

build_dev_version:
  stage: build
  script:
    # Using --cache-from to speed up the build
    - docker build --build-arg NEXUS_USER=$NEXUS_USER --build-arg NEXUS_PASSWORD=$NEXUS_PASSWORD -t ${image_name}:dev .
    - echo "$SERVICE_ACCOUNT_KEY" > key.json
    - docker login -u _json_key --password-stdin https://eu.gcr.io < key.json
    - docker push ${image_name}:dev
  only:
    - develop

sonar_test:
  image: sonarsource/sonar-scanner-cli:latest
  stage: test
  variables:
    SONAR_HOST_URL: "$SONAR_HOST"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.login="$SONAR_TOKEN" -Dsonar.projectKey="${app_name}" -Dsonar.projectName="${app_label}" -Dsonar.projectVersion="${CI_COMMIT_SHORT_SHA}" -Dsonar.sourceEncoding="UTF-8"
  allow_failure: true
  only:
    - merge_requests

set_release_version_and_publish:
  image: python:3.8-slim
  stage: publish
  script:
    - pip install poetry==${poetry_version}
    - POETRY_VIRTUALENVS_IN_PROJECT=true poetry install --no-dev --no-root
    - poetry version patch
    - poetry config repositories.polynom-nexus https://nexus.polynom.io/repository/polynom-pypi-private/
    - poetry publish -r polynom-nexus -u "$NEXUS_USER" -p "$NEXUS_PASSWORD" --build
  only:
    - /^release\//
    - master
